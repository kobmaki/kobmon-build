#
# Author: Uwe Ebel (kobmaki @ aol com)
# License: GPLv2
# Info: Some functions to create hosts with parents

#
# Creates a hostname with prefix ht
# 
# Parameter
#
#   aNumber - the coding number
#
# Example:  createDynamicHostname(20) -> "ht20"
#
function createDynamicHostname(aNumber){
         var aReturn="ht"+aNumber;
         return aReturn;
}

#
# Calculates the parents. The parents are the factor of the number.
# 
# Parameter
# 
#   aNumber - the number to calculate
#   aMax - maximum number, must be equal or greater then aNumber
#   aOffset - an offset for the factor
#
# Example:
#   createDynamicParents(20,99,1) -> [ "ht10", "ht05", "ht04", "ht02" ]
#   createDynamicParents(20,99,2) -> [ "ht10", "ht05", "ht04" ]
#   createDynamicParents(20,99,8) -> [ "ht10" ]
#
function createDynamicParents(aNumber,aMax,aOffset){
    var aReturn=[];
    if (aMax<aNumber || aOffset>aNumber/2) {
       return aReturn;
    }

    var aLength=aMax.to_string().len();
    var aAddPrefix="";
    for (i in range(aLength)) {
       aAddPrefix+="0"
    }

    var aDownCount=Math.floor(aNumber/2);
    while (aDownCount>aOffset){
        if ( Math.floor(aNumber/aDownCount) == aNumber/aDownCount ){
          aReturn.add(""+createDynamicHostname((aAddPrefix+aDownCount).reverse().substr(0,aLength).reverse()))
        }
        aDownCount-=1
    }
    return aReturn.sort();
}

#
# this function creates dynamic hosts
#

function createDynamicHosts(aNumber,aMax,aOffset){
         var aHost=createDynamicHostname(aNumber,aMax,aOffset)
         var aAddress="127.0."+aNumber+".1"
         var aN=""+aNumber
	 
	 while ( aNumber > 0 ) {

         object Host aHost use(aNumber) {
           import "generic-host";
           address = "127.0.0.1" // aAddress
           vars.host_parents = createDynamicParents(aNumber,aMax,aOffset)
           vars.dynamic= "true"
           }
	  aNumber-=1 
	 }
}
