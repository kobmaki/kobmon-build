diff --git a/application/forms/Config/Resource/DbResourceForm.php b/application/forms/Config/Resource/DbResourceForm.php
index c270f7d91..65ccdb348 100644
--- a/application/forms/Config/Resource/DbResourceForm.php
+++ b/application/forms/Config/Resource/DbResourceForm.php
@@ -45,6 +45,9 @@ class DbResourceForm extends Form
         if (Platform::hasOciSupport()) {
             $dbChoices['oci'] = 'Oracle (OCI8)';
         }
+        if (Platform::hasSqliteSupport()) {
+            $dbChoices['sqlite'] = 'Sqlite';
+        }
 
         $offerPostgres = false;
         $offerIbm = false;
@@ -56,6 +59,8 @@ class DbResourceForm extends Form
             $offerMysql = true;
         } elseif ($dbChoice === 'ibm') {
             $offerIbm = true;
+        } elseif ($dbChoice === 'sqlite') {
+            $offerSqlite = true;
         }
 
         $socketInfo = '';
@@ -89,28 +94,30 @@ class DbResourceForm extends Form
                 'multiOptions'  => $dbChoices
             )
         );
-        $this->addElement(
-            'text',
-            'host',
-            array (
-                'required'      => true,
-                'label'         => $this->translate('Host'),
-                'description'   => $this->translate('The hostname of the database')
-                    . ($socketInfo ? '. ' . $socketInfo : ''),
-                'value'         => 'localhost'
-            )
-        );
-        $this->addElement(
-            'number',
-            'port',
-            array(
-                'description'       => $this->translate('The port to use'),
-                'label'             => $this->translate('Port'),
-                'preserveDefault'   => true,
-                'required'          => $offerPostgres,
-                'value'             => $offerPostgres ? 5432 : null
-            )
-        );
+        if ($dbChoice !== 'sqlite') {
+             $this->addElement(
+                'text',
+                'host',
+                array (
+                    'required'      => true,
+                    'label'         => $this->translate('Host'),
+                    'description'   => $this->translate('The hostname of the database')
+                        . ($socketInfo ? '. ' . $socketInfo : ''),
+                    'value'         => 'localhost'
+                )
+            );
+            $this->addElement(
+                'number',
+                'port',
+                array(
+                    'description'       => $this->translate('The port to use'),
+                    'label'             => $this->translate('Port'),
+                    'preserveDefault'   => true,
+                    'required'          => $offerPostgres,
+                    'value'             => $offerPostgres ? 5432 : null
+                )
+            );
+        };
         $this->addElement(
             'text',
             'dbname',
@@ -120,24 +127,27 @@ class DbResourceForm extends Form
                 'description'   => $this->translate('The name of the database to use')
             )
         );
-        $this->addElement(
-            'text',
-            'username',
-            array (
-                'required'      => true,
-                'label'         => $this->translate('Username'),
-                'description'   => $this->translate('The user name to use for authentication')
-            )
-        );
-        $this->addElement(
-            'password',
-            'password',
-            array(
-                'renderPassword'    => true,
-                'label'             => $this->translate('Password'),
-                'description'       => $this->translate('The password to use for authentication')
-            )
-        );
+        if ($dbChoice != 'sqlite') {
+            $this->addElement(
+                'text',
+                'username',
+                array (
+                    'required'      => true,
+                    'label'         => $this->translate('Username'),
+                    'description'   => $this->translate('The user name to use for authentication')
+                )
+            );
+            $this->addElement(
+                'password',
+                'password',
+                array(
+                    'required'          => true,
+                    'renderPassword'    => true,
+                    'label'             => $this->translate('Password'),
+                    'description'       => $this->translate('The password to use for authentication')
+                )
+            );
+        };
         $this->addElement(
             'text',
             'charset',
@@ -157,17 +167,19 @@ class DbResourceForm extends Form
                 'label'         => $this->translate('Persistent')
             )
         );
-        $this->addElement(
-            'checkbox',
-            'use_ssl',
-            array(
-                'autosubmit'    => true,
-                'label'         => $this->translate('Use SSL'),
-                'description'   => $this->translate(
+        if ($dbChoice !== 'sqlite') {
+            $this->addElement(
+                'checkbox',
+                'use_ssl',
+                array(
+                    'autosubmit'    => true,
+                    'label'         => $this->translate('Use SSL'),
+                    'description'   => $this->translate(
                     'Whether to encrypt the connection or to authenticate using certificates'
+                    )
                 )
-            )
-        );
+            );
+        }
         if (isset($formData['use_ssl']) && $formData['use_ssl']) {
             $this->addElement(
                 'text',
diff --git a/library/Icinga/Application/Platform.php b/library/Icinga/Application/Platform.php
index e05251801..b329b3762 100644
--- a/library/Icinga/Application/Platform.php
+++ b/library/Icinga/Application/Platform.php
@@ -420,4 +420,17 @@ class Platform
     {
         return static::extensionLoaded('pdo_pgsql') && static::classExists('Zend_Db_Adapter_Pdo_Pgsql');
     }
+
+    /**
+     * Return whether it's possible to connect to a Sqlite database
+     *
+     * Checks whether the sqlite pdo extension has been loaded and the Zend framework adapter for SQLITE is available
+     *
+     * @return  bool
+     */
+
+    public static function hasSqliteSupport()
+    {
+        return static::extensionLoaded('pdo_sqlite') && static::classExists('Zend_Db_Adapter_Pdo_Sqlite');
+    }
 }
diff --git a/library/Icinga/Data/Db/DbConnection.php b/library/Icinga/Data/Db/DbConnection.php
index f38f6eb75..2f3bd2a17 100644
--- a/library/Icinga/Data/Db/DbConnection.php
+++ b/library/Icinga/Data/Db/DbConnection.php
@@ -226,6 +226,10 @@ class DbConnection implements Selectable, Extensible, Updatable, Reducible, Insp
                 $adapter = 'Pdo_Ibm';
                 $defaultPort = 50000;
                 break;
+            case 'sqlite':
+                $adapter = 'Pdo_Sqlite';
+                $defaultPort = 0; // dummy port, as a value is required
+                break;
             default:
                 throw new ConfigurationError(
                     'Backend "%s" is not supported',
